{"version":3,"sources":["components/header.js","components/navtabs.js","components/utils/API.js","components/employee.js","components/table.js","components/pages/main.js","components/female.js","components/male.js","components/deptTables.js","components/buttons.js","components/pages/gender.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","height","width","alt","NavTabs","location","useLocation","to","pathname","axios","get","url","then","res","data","results","map","emp","id","value","email","gender","firstName","name","first","lastName","last","img","picture","thumbnail","Employee","props","scope","employee","Table","employees","key","Main","state","API","setState","catch","err","console","log","this","Component","femaleEmployees","Female","i","length","push","maleEmployees","Male","DeptTables","Buttons","onClick","handleGenderSelect","type","Gender","event","genderSelection","target","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5a307c01.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/style.css\";\n\nfunction Header() {\n    return (\n        <header className=\"App-header\">\n            <img src=\"https://www.dallasisd.org/cms/lib/TX01001475/Centricity/Domain/1186/directory.png\" height=\"100\" width=\"100\" alt=\"logo\" />\n            <h1 className=\"head\">\n                Employee Directory\n            </h1>\n      </header>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction NavTabs() {\n  const location = useLocation();\n\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <Link to=\"/\" \n        className={location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\n          Home\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          to=\"/gender\"\n          className={location.pathname === \"/gender\" ? \"nav-link active\" : \"nav-link\"}>\n            Sort by Gender\n        </Link>\n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n","import axios from \"axios\";\n\nconst url = \"https://randomuser.me/api/?results=\";\nconst resultNumber = \"100\";\nconst queryParams= \"&seed=fea8be3e64777240&inc=gender,picture,name,email,phone,nat,id&nat=us\";\n\nexport default {\n\n  getEmployees: function() {\n    return axios\n      .get(url + resultNumber + queryParams)\n      .then(res => {\n        const employees = res.data.results;\n        return employees.map(emp => {\n          return {\n            id: emp.id.value,\n            email: emp.email,\n            gender: emp.gender,\n            firstName: emp.name.first,\n            lastName: emp.name.last,\n            img: emp.picture.thumbnail\n          };\n        });\n      });\n  }\n\n  // getEmployees: function() {\n  //   return axios\n  //     .get(\"https://alper.dev/employees\")\n  //     .then(res => {\n  //       const employees = res.data;\n  //       return employees.map(emp => {\n  //         return {\n  //           id: emp.id,\n  //           firstName: emp.firstName,\n  //           lastName: emp.lastName,\n  //           department: emp.department\n  //         };\n  //       });\n  //     });\n  // }\n}\n","import React from \"react\";\n\nfunction Employee (props) {\n    return (\n          <tr>\n            <th scope=\"row\"><img src={props.employee.img} alt={props.employee.id}></img></th>\n            <td>{props.employee.id}</td>\n            <td>{props.employee.email}</td>\n            <td>{props.employee.firstName}</td>\n            <td>{props.employee.lastName}</td>\n            <td>{props.employee.gender}</td>\n          </tr>\n    )\n  }\n\nexport default Employee;","import React from \"react\";\nimport Employee from \"../components/employee\";\n\nfunction Table(props) {\n  return (\n    <table className=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Image</th>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">First Name</th>\n          <th scope=\"col\">Last Name</th>\n          <th scope=\"col\">Gender</th> \n        </tr>\n      </thead>\n      <tbody>\n            {props.employees.map(employee => (\n              <Employee key={employee.id} employee={employee} />\n            ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default Table;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Table from \"../table\";\n\nclass Main extends Component {\n  constructor() {\n  super();\n\n    this.state = {\n      employees: []\n    }\n  }\n\n  componentDidMount() {\n    API.getEmployees()\n      .then(res => {\n        this.setState({ employees: res })\n      })\n      .catch(err => console.log(err));\n  } \n\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center\">All Employees</h1>\n        <Table employees={this.state.employees} />\n      </div>\n    )\n  };\n}\n\nexport default Main\n","import React from \"react\";\nimport Employee from \"../components/employee\";\n\nconst femaleEmployees = [];\n\nfunction Female (props) {\n    let i;\n    for(i = 0; i < props.employees.length; i++) {\n        if(props.employees[i].gender === \"female\") {\n            femaleEmployees.push(props.employees[i]);\n        }\n    }\n\n    return (\n      <>\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Image</th>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">First Name</th>\n                <th scope=\"col\">Last Name</th>\n                <th scope=\"col\">Gender</th>\n              </tr>\n            </thead>\n            <tbody>\n                  {femaleEmployees.map(employee => (\n                    <Employee key={employee.id} employee={employee} />\n                  ))}\n            </tbody>\n          </table>\n        </>\n      )\n}\n\nexport default Female","import React from \"react\";\nimport Employee from \"../components/employee\";\n\nconst maleEmployees = [];\n\nfunction Male (props) {\n    let i;\n    for(i = 0; i < props.employees.length; i++) {\n        if(props.employees[i].gender === \"male\") {\n            maleEmployees.push(props.employees[i]);\n        }\n    }\n\n    return (\n      <>\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Image</th>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">First Name</th>\n                <th scope=\"col\">Last Name</th>\n                <th scope=\"col\">Gender</th>\n              </tr>\n            </thead>\n            <tbody>\n                  {maleEmployees.map(employee => (\n                    <Employee key={employee.id} employee={employee} />\n                  ))}\n            </tbody>\n          </table>\n        </>\n      )\n}\n\nexport default Male","import React from \"react\";\nimport Female from \"./female\";\nimport Male from \"./male\";\n// import Accounting from \"../components/accounting\";\n// import BusinessDev from \"../components/businessdev\";\n// import Engineering from \"../components/engineering\";\n// import HumanResources from \"../components/humanresources\";\n// import Legal from \"../components/legal\";\n// import Marketing from \"../components/marketing\";\n// import ProductManagement from \"../components/productmanagement\";\n// import ResearchAndDev from \"../components/researchanddev\";\n// import Sales from \"../components/sales\";\n// import Services from \"../components/services\";\n// import Support from \"../components/support\";\n// import Training from \"../components/training\";\n\n\nfunction DeptTables(props) {\n    if(props.gender === \"female\") {\n        return (\n            <>\n                <br></br><br></br>\n                <Female employees={props.employees} />\n            </>\n          )\n    } else if(props.gender === \"male\") {\n        return (\n            <>\n                <br></br><br></br>\n                <Male employees={props.employees} />\n            </>\n          )\n    // } else if(props.department === \"Engineering\") {\n    //     return (\n    //         <>\n    //             <table className=\"table table-striped\">\n    //             <tbody>\n    //                 <Engineering employees={props.employees} />\n    //             </tbody>\n    //             </table>\n    //         </>\n    //         )\n    // } else if(props.department === \"Human Resources\") {\n    //     return (\n    //         <>\n    //             <table className=\"table table-striped\">\n    //             <tbody>\n    //                 <HumanResources employees={props.employees} />\n    //             </tbody>\n    //             </table>\n    //         </>\n    //         )\n    // } else if(props.department === \"Legal\") {\n    //     return (\n    //         <>\n    //             <table className=\"table table-striped\">\n    //             <tbody>\n    //                 <Legal employees={props.employees} />\n    //             </tbody>\n    //             </table>\n    //         </>\n    //         )\n    // } else if(props.department === \"Marketing\") {\n    //     return (\n    //         <>\n    //             <table className=\"table table-striped\">\n    //             <tbody>\n    //                 <Marketing employees={props.employees} />\n    //             </tbody>\n    //             </table>\n    //         </>\n    //         )\n    // } else if(props.department === \"Product Management\") {\n    //     return (\n    //         <>\n    //             <table className=\"table table-striped\">\n    //             <tbody>\n    //                 <ProductManagement employees={props.employees} />\n    //             </tbody>\n    //             </table>\n    //         </>\n    //         )\n    // } else if(props.department === \"Research and Development\") {\n    //     return (\n    //         <>\n    //             <table className=\"table table-striped\">\n    //             <tbody>\n    //                 <ResearchAndDev employees={props.employees} />\n    //             </tbody>\n    //             </table>\n    //         </>\n    //         )\n    // } else if(props.department === \"Sales\") {\n    //     return (\n    //         <>\n    //             <table className=\"table table-striped\">\n    //             <tbody>\n    //                 <Sales employees={props.employees} />\n    //             </tbody>\n    //             </table>\n    //         </>\n    //         )\n    // } else if(props.department === \"Services\") {\n    //     return (\n    //         <>\n    //             <table className=\"table table-striped\">\n    //             <tbody>\n    //                 <Services employees={props.employees} />\n    //             </tbody>\n    //             </table>\n    //         </>\n    //         )\n    // } else if(props.department === \"Support\") {\n    //     return (\n    //         <>\n    //             <table className=\"table table-striped\">\n    //             <tbody>\n    //                 <Support employees={props.employees} />\n    //             </tbody>\n    //             </table>\n    //         </>\n    //         )\n    // } else if(props.department === \"Training\") {\n    //     return (\n    //         <>\n    //             <table className=\"table table-striped\">\n    //             <tbody>\n    //                 <Training employees={props.employees} />\n    //             </tbody>\n    //             </table>\n    //         </>\n    //         )\n    } else {\n        return (\n            <>\n                <br></br> \n                <br></br>\n                <br></br> \n                <div>(Select Gender to Sort)</div>\n            </>\n        )\n    }\n}\n\nexport default DeptTables;","import React from \"react\";\n\nfunction Buttons(props) {\n    return (\n        <>\n        <br></br>\n            <button onClick={props.handleGenderSelect} value=\"female\" type=\"button\" className=\"btn btn-primary\">Female</button>\n            <button onClick={props.handleGenderSelect} value=\"male\" type=\"button\" className=\"btn btn-success\">Male</button>\n            {/* <button onClick={props.handleDeptSelect} value=\"Engineering\" type=\"button\" className=\"btn btn-success\">Engineering</button>\n            <button onClick={props.handleDeptSelect} value=\"Human Resources\" type=\"button\" className=\"btn btn-danger\">Human Resources</button>\n            <button onClick={props.handleDeptSelect} value=\"Legal\" type=\"button\" className=\"btn btn-warning\">Legal</button>\n            <button onClick={props.handleDeptSelect} value=\"Marketing\" type=\"button\" className=\"btn btn-info\">Marketing</button>\n            <button onClick={props.handleDeptSelect} value=\"Product Management\" type=\"button\" className=\"btn btn-success\">Product Management</button>\n            <button onClick={props.handleDeptSelect} value=\"Research and Development\" type=\"button\" className=\"btn btn-dark\">Research and Development</button>\n            <button onClick={props.handleDeptSelect} value=\"Sales\" type=\"button\" className=\"btn btn-primary\">Sales</button>\n            <button onClick={props.handleDeptSelect} value=\"Services\" type=\"button\" className=\"btn btn-secondary\">Services</button>\n            <button onClick={props.handleDeptSelect} value=\"Support\" type=\"button\" className=\"btn btn-success\">Support</button>\n            <button onClick={props.handleDeptSelect} value=\"Training\" type=\"button\" className=\"btn btn-danger\">Training</button> */}\n        </>\n    )\n}\n\nexport default Buttons","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport DeptTables from \"../deptTables\";\nimport Buttons from \"../buttons\";\n\nclass Gender extends Component {\n  constructor() {\n  super();\n\n    this.state = {\n      employees: []\n    }\n  }\n\n  componentDidMount() {\n    API.getEmployees()\n      .then(res => {\n        this.setState({ employees: res })\n      })\n      .catch(err => console.log(err));\n  } \n\n  handleGenderSelect = event => {\n    const genderSelection = event.target.value;\n    this.setState({\n      gender: genderSelection\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center\">View Employees by Gender</h1>\n        <Buttons handleGenderSelect={this.handleGenderSelect} employees={this.state.employees} gender={this.state.gender}/>\n        <DeptTables employees={this.state.employees} gender={this.state.gender} />\n      </div>\n    )\n  };\n}\n\nexport default Gender\n","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport Header from \"./components/header\";\nimport NavTabs from \"./components/navtabs\";\nimport Main from \"./components/pages/main\";\nimport Gender from \"./components/pages/gender\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n        <HashRouter>\n          <div className=\"body\">\n            <NavTabs />\n            <Route exact path=\"/\" component={Main} />\n            <Route exact path=\"/gender\" component={Gender} />\n          </div>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}